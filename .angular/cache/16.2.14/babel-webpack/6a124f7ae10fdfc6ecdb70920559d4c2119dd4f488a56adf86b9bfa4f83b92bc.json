{"ast":null,"code":"import { HttpResponse } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport class CacheInterceptor {\n  intercept(request, next) {\n    if (request.method !== 'GET') {\n      return next.handle(request);\n    }\n    const cachedResponse = localStorage.getItem(request.url);\n    if (cachedResponse) {\n      return of(new HttpResponse({\n        body: JSON.parse(cachedResponse),\n        status: 200\n      }));\n    }\n    return next.handle(request).pipe(tap(event => {\n      if (event instanceof HttpResponse) {\n        localStorage.setItem(request.url, JSON.stringify(event.body));\n      }\n    }));\n  }\n  static #_ = this.ɵfac = function CacheInterceptor_Factory(t) {\n    return new (t || CacheInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CacheInterceptor,\n    factory: CacheInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["HttpResponse","of","tap","CacheInterceptor","intercept","request","next","method","handle","cachedResponse","localStorage","getItem","url","body","JSON","parse","status","pipe","event","setItem","stringify","_","_2","factory","ɵfac"],"sources":["/Users/hardikkalra/Desktop/fyle/src/app/cache.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class CacheInterceptor implements HttpInterceptor {\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (request.method !== 'GET') {\n      return next.handle(request);\n    }\n\n    const cachedResponse = localStorage.getItem(request.url);\n    if (cachedResponse) {\n      return of(new HttpResponse({ body: JSON.parse(cachedResponse), status: 200 }));\n    }\n\n    return next.handle(request).pipe(\n      tap(event => {\n        if (event instanceof HttpResponse) {\n          localStorage.setItem(request.url, JSON.stringify(event.body));\n        }\n      })\n    );\n  }\n}\n"],"mappings":"AACA,SAA+DA,YAAY,QAAQ,sBAAsB;AACzG,SAAqBC,EAAE,QAAQ,MAAM;AACrC,SAASC,GAAG,QAAQ,gBAAgB;;AAGpC,OAAM,MAAOC,gBAAgB;EAE3BC,SAASA,CAACC,OAAyB,EAAEC,IAAiB;IACpD,IAAID,OAAO,CAACE,MAAM,KAAK,KAAK,EAAE;MAC5B,OAAOD,IAAI,CAACE,MAAM,CAACH,OAAO,CAAC;;IAG7B,MAAMI,cAAc,GAAGC,YAAY,CAACC,OAAO,CAACN,OAAO,CAACO,GAAG,CAAC;IACxD,IAAIH,cAAc,EAAE;MAClB,OAAOR,EAAE,CAAC,IAAID,YAAY,CAAC;QAAEa,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACN,cAAc,CAAC;QAAEO,MAAM,EAAE;MAAG,CAAE,CAAC,CAAC;;IAGhF,OAAOV,IAAI,CAACE,MAAM,CAACH,OAAO,CAAC,CAACY,IAAI,CAC9Bf,GAAG,CAACgB,KAAK,IAAG;MACV,IAAIA,KAAK,YAAYlB,YAAY,EAAE;QACjCU,YAAY,CAACS,OAAO,CAACd,OAAO,CAACO,GAAG,EAAEE,IAAI,CAACM,SAAS,CAACF,KAAK,CAACL,IAAI,CAAC,CAAC;;IAEjE,CAAC,CAAC,CACH;EACH;EAAC,QAAAQ,CAAA,G;qBAnBUlB,gBAAgB;EAAA;EAAA,QAAAmB,EAAA,G;WAAhBnB,gBAAgB;IAAAoB,OAAA,EAAhBpB,gBAAgB,CAAAqB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}